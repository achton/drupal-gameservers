<?php

/**
 * Implements hook_schema().
 */
function gameservers_schema() {

  $schema = array();

  $schema['gameservers'] = array(
    'description' => 'The base table for the Gameserver entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Gameserver entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Gameserver name',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
      'description' => array(
        'description' => 'Gameserver description',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'ip' => array(
        'description' => 'Server IP address',
        'type' => 'varchar',
        'length' => 128,
      ),
      'port' => array(
        'description' => 'Server query port',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Server type',
        'type' => 'varchar',
        'length' => 128,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that owns this server; initially, this is the user that created it.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the server is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the server was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the server was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'entity_changed' => array('changed'),
      'entity_created' => array('created'),
      'uid' => array('uid'),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function gameservers_requirements($phase) {
  $requirements = array();
  $t = get_t();
  $lib_name = 'gameq';

  if ($phase == 'runtime') {

    $requirements['gameservers'] = array(
      'title' => $t('Gameservers: GameQ library')
    );

    $library = libraries_detect($lib_name);
    if ($library && !empty($library['installed'])) {
      $requirements['gameservers']['value'] = $t('GameQ library is available.');
      $requirements['gameservers']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['gameservers']['description'] = $library['error message'];
      $requirements['gameservers']['value'] = $t('GameQ library is not available.');
      $requirements['gameservers']['severity'] = REQUIREMENT_ERROR;
    }

  }

  return $requirements;
}


/**
* Implements hook_uninstall().
*/
function gameservers_uninstall() {
  //variable_del('variable_name');
}
